{
  parserClass="de.unruh.onthefly.unsorted.parser.SimpleParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Simple"
  psiImplClassSuffix="Impl"
  psiPackage="de.unruh.onthefly.unsorted.psi"
  psiImplPackage="de.unruh.onthefly.unsorted.psi.impl"

  elementTypeHolderClass="de.unruh.onthefly.unsorted.psi.SimpleTypes"
  elementTypeClass="de.unruh.onthefly.unsorted.SimpleElementType"
  tokenTypeClass="de.unruh.onthefly.unsorted.SimpleTokenType"

  psiImplUtilClass="de.unruh.onthefly.unsorted.SimplePsiImplUtil"
}

simpleFile ::= item_*

private item_ ::= (assignment|COMMENT|CRLF)

assignment ::= (IDENTIFIER ASSIGN expression)
    {methods=[getVariable getInlay]
     implements="de.unruh.onthefly.inlays.PsiWithInlay"}

atom ::= (variable | numeral)
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}

variable ::= IDENTIFIER
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}

numeral ::= INT
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}

expression ::= (infixExpression | prefixExpression)
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}

infixOp ::= (PLUS|DIV|MINUS|TIMES)

infixExpression ::= (atom infixOp atom)
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}

prefixOp ::= (MINUS|SQRT)

prefixExpression ::= (prefixOp atom)
    {methods=[getExpression]
     implements="de.unruh.onthefly.unsorted.PsiExpression"}
